"Basic settings
set nocompatible
filetype plugin indent on

"Configure file browser
let g:netrw_browse_split = 4
let g:netrw_altv = 1

let mapleader = "," "Change the leader key to ','

set t_Co=256 "MORE COLORS
set encoding=utf-8
set fenc=utf-8
set termencoding=utf-8
set number
set expandtab
set shiftwidth=2
set smarttab
set autoindent
set smartindent
set tabstop=4
set hidden
set softtabstop=2
set nowrap
set backspace=2
set laststatus=2
set autochdir
highlight clear SignColumn

"I never found the backup files useful.
set nobackup
set nowritebackup

"I don't really need swapfiles (disable unless you happen to work with really large
"files and limited memory)
set noswapfile

syntax enable

"Strip trailing whitespace when writing a file
autocmd BufWritePre * :%s/\s\+$//e

"""""""""""""""""""""""""""""""""""
" SWAP BETWEEN HEADER AND C FILES "
"""""""""""""""""""""""""""""""""""
function! SwapSourceFile(cmd)
  let curfile = split(@%, '\.')
  if len(curfile) > 1
    if curfile[1] == "c" || curfile[1] == "cc"
      let target = "h"
    elseif curfile[1] == "h"
      let target = "c"
    elseif curfile[1] == "hpp"
      let target = "cpp"
    elseif curfile[1] == "cpp"
      let target = "hpp"
    else
      echo "Unrecognized file type"
      return
    endif
    execute a:cmd . " " .  curfile[0] . "." . target
  endif
endfunction

""""""""""""""
" FIND FILES "
""""""""""""""
function! Find(name)
  let l:list=system("find . -name '*".a:name."*' | perl -ne 'print \"$.\\t$_\"'")
  let l:num=strlen(substitute(l:list, "[^\n]", "", "g"))
  if l:num < 1
    echo "'".a:name."' not found"
    return
  endif
  if l:num != 1
    echo l:list
    let l:input=input("Which ? (CR=nothing)\n")
    if strlen(l:input)==0
      return
    endif
    if strlen(substitute(l:input, "[0-9]", "", "g"))>0
      echo "Not a number"
      return
    endif
    if l:input<1 || l:input>l:num
      echo "Out of range"
      return
    endif
    let l:line=matchstr("\n".l:list, "\n".l:input."\t[^\n]*")
  else
    let l:line=l:list
  endif
  let l:line=substitute(l:line, "^[^\t]*\t./", "", "")
  execute ":e ".l:line
endfunction
command! -nargs=1 Find :call Find("<args>")

""""""""""""""""""
" KEYBOARD BINDS "
""""""""""""""""""
nnoremap <silent> <leader>w :w<CR>
nnoremap <silent> <leader>o :Find<Space>
nnoremap <silent> <leader>f :split<CR>:Exp<CR>
nnoremap <silent> <leader>a :call SwapSourceFile("e")<CR>
nnoremap <silent> [b :bp<CR>
nnoremap <silent> ]b :bn<CR>
nnoremap <leader>b :ls<CR>:b<Space>

inoremap <Tab>    <c-r>=SmartTabComplete()<CR>

"Move windows with C-Direction
map <C-J> <C-W>j
map <C-K> <C-W>k
map <C-H> <C-W>h
map <C-L> <C-W>l
